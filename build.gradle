buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

configurations {
    deployerJars
    packed
    compile.extendsFrom packed    
}

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'forge'


version = "1.3.0_dev3_1.7.10"
group= "mcp.mobius.mobiuscore" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MobiusCore"

def commonManifest = {
    attributes 'FMLCorePlugin': 'mcp.mobius.mobiuscore.asm.CoreDescription'
}

jar {
    manifest commonManifest

    from {
        configurations.packed.collect {
            it.isDirectory() ? it : zipTree(it).matching {
                exclude "META-INF", "META-INF/**", "*META-INF*", "meta-inf"
                exclude "**.jar", "**/*.jar", "*.jar"
            }
        }
    }
}

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config. It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

dependencies {
    //packed 'org.apache.commons:commons-math3:3.2'
    deployerJars "org.apache.maven.wagon:wagon-ssh:2.2"
}

minecraft {
    version = "1.7.10-10.13.0.1208"
    assetDir = "eclipse/assets"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '*.info'
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
    manifest commonManifest
}

artifacts {
    archives sourceJar, devJar
}

uploadArchives {
    dependsOn 'reobf'
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: "scp://mobiusstrip.eu/home/mobius/web/maven"){
            authentication(userName: "mobius")
        }

        pom {
            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName
            project {
                name project.archivesBaseName
                packaging 'jar'
                description 'MobiusCore '
                url 'http://mobiusstrip.eu'        
            }
        }
    }

}
